"""Create database tables for the first time

Revision ID: 3d1965dfdcd5
Revises: 
Create Date: 2023-07-01 11:23:57.334012

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3d1965dfdcd5'
down_revision = None
branch_labels = None
depends_on = None

inspector = sa.inspect(op.get_bind())


def upgrade():
    table_names = inspector.get_table_names()
    if 'package' in table_names and \
       'package_version' in table_names and \
       'installer' in table_names and \
       'installer_switch' in table_names:
        print('All Tables already exist, skipping creation')
        return
    if 'package' not in table_names:
        op.create_table('package',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('identifier', sa.String(length=255), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('publisher', sa.String(length=255), nullable=False),
        sa.Column('download_count', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('identifier')
        )
    
    if 'user' not in table_names:
        op.create_table('user',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=True),
        sa.Column('email', sa.String(length=100), nullable=True),
        sa.Column('password', sa.String(length=100), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email')
        )
    if 'package_version' not in table_names:
        op.create_table('package_version',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('identifier', sa.String(length=50), nullable=True),
        sa.Column('version_code', sa.String(length=50), nullable=True),
        sa.Column('default_locale', sa.String(length=50), nullable=True),
        sa.Column('package_locale', sa.String(length=50), nullable=True),
        sa.Column('short_description', sa.String(length=50), nullable=True),
        sa.Column('date_added', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['identifier'], ['package.identifier'], ),
        sa.PrimaryKeyConstraint('id')
        )
    if 'installer' not in table_names:
        op.create_table('installer',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('version_id', sa.Integer(), nullable=True),
        sa.Column('architecture', sa.String(length=50), nullable=True),
        sa.Column('installer_type', sa.String(length=50), nullable=True),
        sa.Column('file_name', sa.String(length=100), nullable=True),
        sa.Column('installer_sha256', sa.String(length=100), nullable=True),
        sa.Column('scope', sa.String(length=50), nullable=True),
        sa.ForeignKeyConstraint(['version_id'], ['package_version.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
    if 'installer_switch' not in table_names:
        op.create_table('installer_switch',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('installer_id', sa.Integer(), nullable=True),
        sa.Column('switch_key', sa.String(length=50), nullable=True),
        sa.Column('switch_value', sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(['installer_id'], ['installer.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('installer_switch')
    op.drop_table('installer')
    op.drop_table('package_version')
    op.drop_table('user')
    op.drop_table('package')
    # ### end Alembic commands ###
