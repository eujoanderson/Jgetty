<!-- Main modal -->
<div x-cloak x-show="showAddRoleModal" id="addRoleModal" tabindex="-1" aria-hidden="true" x-data="{ 
                            options: [],
                            close: function() { 
                                showAddRoleModal = false;
                            } 
                        }"
    class="fixed top-0 left-0 right-0 z-50 w-full p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-full max-h-full dark:bg-neutral-700/40 flex justify-center items-center"
    x-transition:enter="ease-out duration-300" x-transition:enter-start="opacity-0 "
    x-transition:enter-end="opacity-100" x-transition:leave="ease-in duration-300"
    x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0">
    <div class="relative w-full max-w-2xl max-h-full " @click.away="close();" x-show="showAddRoleModal"
        x-transition:enter="ease-out duration-300" x-transition:enter-start="opacity-0 scale-90"
        x-transition:enter-end="opacity-100 scale-100" x-transition:leave="ease-in duration-300"
        x-transition:leave-start="opacity-100 scale-100" x-transition:leave-end="opacity-0 scale-90">
        <!-- Modal content -->
        <div class="relative bg-white rounded-2xl shadow dark:bg-neutral-900">
            <!-- Modal header -->
            <div class="flex items-start justify-between p-4 border-b rounded-t dark:border-gray-600">
                <div class="flex flex-col">
                    <h3 class="text-2xl font-semibold text-gray-900 dark:text-white">
                        Add Role
                    </h3>
                </div>
                <button type="button" @click="showAddRoleModal = false;"
                    class="text-gray-400 transition-colors duration-300 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white"
                    data-modal-hide="defaultModal">
                    <svg aria-hidden="true" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"
                        xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd"
                            d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                            clip-rule="evenodd"></path>
                    </svg>
                    <span class="sr-only">Close modal</span>
                </button>
            </div>
            <!-- Modal body -->
            <div class="px-4 pb-4 ">
                <form id="addRoleForm" x-ref="addRoleForm" class="mt-5"
                    action="{{ url_for('api.add_role') }}" method="POST" enctype="multipart/form-data">
                    <div class="mt-2">
                        <label for="name" class="block text-gray-700 dark:text-gray-300 ">Name<span
                                class="text-red-500">*</span></label>
                        <input required name="name" placeholder="" type="text"
                            class="block w-full px-3 py-2 mt-1 text-gray-600 dark:text-gray-200 placeholder-gray-400 bg-white dark:bg-neutral-950 border border-gray-200 dark:border-gray-50/30 rounded-md focus:border-blue-400 focus:outline-none focus:ring focus:ring-blue-300 focus:ring-opacity-40">
                    </div>
                    <div class="mt-2">
                        <label for="permissions" class="block text-gray-700 dark:text-gray-300 ">Permissions<span
                                class="text-red-500">*</span></label>
                        <div x-data="{ 
                            open: false, 
                            filter: '', 
                            selectedPermissions: function() { 
                                return this.options.join(','); 
                            }, 
                            reset: function() { 
                                this.options = []; 
                                this.filter = ''; 
                            } 
                        }" class="w-full text-gray-600 dark:text-gray-200 relative">

                            <div
                                class="p-3 flex flex-wrap gap-2 cursor-pointer h-auto placeholder-gray-400 bg-white dark:bg-neutral-950 border border-gray-200 dark:border-gray-50/30 rounded-md focus:border-blue-400 focus:outline-none focus:ring focus:ring-blue-300 focus:ring-opacity-40">
                                <!-- Show selected options as chips -->
                                <template x-for="(option, index) in options" :key="index">
                                    <span :class="{
        'bg-blue-200 dark:bg-blue-600/60 text-blue-600 dark:text-blue-300': option.startsWith('view'),
        'bg-yellow-200 dark:bg-yellow-600/60 text-yellow-600 dark:text-yellow-300': option.startsWith('edit'),
        'bg-green-200 dark:bg-green-600/60 text-green-600 dark:text-green-300': option.startsWith('add'),
        'bg-red-200 dark:bg-red-600/60 text-red-600 dark:text-red-300': option.startsWith('delete'),
        'bg-gray-200 dark:bg-gray-600/60 text-gray-600 dark:text-gray-300': !(option.startsWith('view') || 
            option.startsWith('edit') || 
            option.startsWith('add') || 
            option.startsWith('delete'))
    }"
                                        class=" px-2  text-base text-center select-none text-blue-600 dark:text-blue-300 bg-blue-200/60 dark:bg-blue-600/60 rounded-full flex flex-row items-center justify-center">
                                        <span x-text="option"></span>
                                        <button @click.stop="options.splice(index, 1)" class="ml-1 p-1">
                                            <span>&times;</span>
                                        </button>
                                    </span>

                                </template>
                                <input x-model="filter"
                                    class="flex-1 bg-transparent w-full focus:outline   focus:outline-none focus:border-none"
                                    placeholder="Search..." @focus="open = true" @click.stop>
                                <input class="hidden" required  x-ref="permissions" name="permissions" :value="selectedPermissions()">
                            </div>

                            <!-- Clear button -->
                            <button x-show="options.length > 0" @click="reset()"
                                class="focus:outline-none absolute right-0 top-0 mr-3 mt-3 text-gray-500 hover:text-red-500 transition-colors duration-300 cursor-pointer">
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                                    stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                                </svg>
                            </button>

                            <div x-show="open" @click.outside="open = false" @keydown.escape.window="open = false"
                                class="origin-top-left absolute left-0 mt-2 w-1/2 rounded-md shadow-lg bg-white dark:bg-neutral-800 ring-1 ring-black ring-opacity-5 focus:outline-none z-50"
                                style="display: none;" x-transition:enter="transition ease-out duration-100"
                                x-transition:enter-start="opacity-0 scale-95"
                                x-transition:enter-end="opacity-100 scale-100"
                                x-transition:leave="transition ease-in duration-75"
                                x-transition:leave-start="opacity-100 scale-100"
                                x-transition:leave-end="opacity-0 scale-95">
                                <div class="py-1">
                                    <!-- Permissions list -->
                                    <div
                                        class="max-h-60 overflow-y-auto scrollbar scrollbar-track-transparent dark:scrollbar-thumb-gray-300 scrollbar-thumb-neutral-600 scrollbar-w-2 scrollbar-corner-rounded-full scrollbar-thumb-rounded-full select-none">
                                        <!-- Dynamically create checkbox list -->
                                        {% for permission in permissions %}
                                        <div :class="{
                                                        ' text-blue-600 dark:text-blue-300': '{{ permission.name }}'.toLowerCase().startsWith('view'),
                                                        ' text-yellow-600 dark:text-yellow-300': '{{ permission.name }}'.toLowerCase().startsWith('edit'),
                                                        ' text-green-600 dark:text-green-300': '{{ permission.name }}'.toLowerCase().startsWith('add'),
                                                        ' text-red-600 dark:text-red-300': '{{ permission.name }}'.toLowerCase().startsWith('delete'),
                                                        ' text-gray-600 dark:text-gray-300': !('{{ permission.name }}'.toLowerCase().startsWith('view') || 
                                                            '{{ permission.name }}'.toLowerCase().startsWith('edit') || 
                                                            '{{ permission.name }}'.toLowerCase().startsWith('add') || 
                                                            '{{ permission.name }}'.toLowerCase().startsWith('delete'))
                                                    }"
                                         x-show="filter === '' || '{{ permission.name }}'.toLowerCase().includes(filter.toLowerCase())"
                                            class="flex items-center p-2">
                                            <input x-model="options" @change="filter = ''" id="{{ permission.name }}"
                                                type="checkbox" value="{{ permission.name }}"
                                                class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500">
                                            <label 
                                             for="{{ permission.name }}" class="ml-2 text-sm font-medium">{{
                                                permission.name }}</label>
                                        </div>
                                        {% endfor %}
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- End of your code -->

                        <div x-show="!showUploadButton"
                            class="min-w-[5%] h-auto p-2 mt-4 rounded-md w-min bg-blue-600 flex flex-row justify-end text-white text-lg font-semibold "
                            x-bind:style="'width: ' + progress + '%; transition: width 0.5s ease-in-out;'">
                            <p x-text="progress"></p>
                        </div>
                    </div>
                </form>
            </div>
            <!-- Modal footer -->
            <div class="flex items-center justify-end p-4 space-x-2 dark:border-gray-600">
                <button type="submit" type="button" form="addRoleForm"
                    class="px-3 py-2 tracking-wide text-white   transition-colors duration-300 transform bg-blue-700 hover:bg-blue-800 rounded-md focus:outline-none focus:bg-blue-800 focus:ring focus:ring-blue-300 focus:ring-opacity-50">Add
                    Role</button>
            </div>
        </div>
    </div>
</div>
</div>
